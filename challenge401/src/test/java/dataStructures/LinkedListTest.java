/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package dataStructures;

import dataStructures.linkedlist.LinkedList;
import org.junit.Test;

import static org.junit.Assert.*;

public class LinkedListTest {
    @Test
    public void emptyList(){
        LinkedList emptyList = new LinkedList();

        assertEquals("null",emptyList.toString());
    }

    @Test
    public void insertAtHead(){
        LinkedList list1 = new LinkedList();
        assertEquals("null", list1.toString());

        list1.insert(5);
        list1.insert(6);
        list1.insert(7);
        assertEquals("{7} -> {6} -> {5} -> null", list1.toString());

        list1.insert(8);
        assertEquals("{8} -> {7} -> {6} -> {5} -> null", list1.toString());
    }

    @Test
    public void checkHeadProperty(){
        LinkedList list1 = new LinkedList();

        list1.insert(5);
        list1.insert(6);
        list1.insert(7);
        assertEquals(7, list1.head.value);

        list1.insert(8);
        assertEquals(8,list1.head.value);
    }

    @Test
    public void insertMultipleNodes(){
        LinkedList list1 = new LinkedList();

        for(int i=0; i < 3; i++){
            list1.insert(5);
        }

        assertEquals("{5} -> {5} -> {5} -> null", list1.toString());
    }

    @Test
    public void findValueInList(){
        LinkedList list1 = new LinkedList();
        list1.insert(100);
        list1.insert(20);
        list1.insert(30);

        assertTrue(list1.includes(100));
        assertTrue(list1.includes(20));
        assertTrue(list1.includes(30));
    }

    @Test
    public void valueNotFound(){
        LinkedList list = new LinkedList();
        list.insert(55);
        list.insert(70);
        list.insert(75);
        list.insert(80);

        assertFalse(list.includes(10));
        assertFalse(list.includes(20));
        assertFalse(list.includes(30));
        assertFalse(list.includes(56));
    }

    @Test
    public void returnList(){
        LinkedList list = new LinkedList();
        list.insert(10);
        list.insert(20);
        list.insert(5);
        assertEquals("{5} -> {20} -> {10} -> null", list.toString());

        LinkedList list2 = new LinkedList();
        list2.insert(60);
        list2.insert(70);
        list2.insert(80);
        list2.insert(90);
        assertEquals("{90} -> {80} -> {70} -> {60} -> null",list2.toString());
    }


}
